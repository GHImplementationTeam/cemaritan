service: aws-cemaritan-api

frameworkVersion: ">=1.2.0 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  memorySize: 256
  stage: dev
  region: us-east-1
  environment:
    DB_HOST: ${ssm:host} 
    PORT: ${ssm:port}
    DB_NAME: ${ssm:dbname}
    USER: ${ssm:user}
    PASSWORD: ${ssm:pw}

functions:
  ### This will only be used by some Cemaritan level admin
  get_organizations:
    handler: organization.organizations
    events:
      - http:
          path: organizations
          method: get
          cors: true

  ### Collections functions
  get_connections:
    handler: connection.connections
    events:
      - http:
          path: organizations/{organization_id}/connections
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  get_mappings:
    handler: mapping.mappings
    events:
      - http:
          path: organizations/{organization_id}/mappings
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true

  get_transfers:
    handler: transfer.transfers
    events:
      - http:
          path: organizations/{organization_id}/transfers
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  get_users:
    handler: user.users
    events:
      - http:
          path: organizations/{organization_id}/users
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  get_histories:
    handler: history.histories
    events:
      - http:
          path: organizations/{organization_id}/histories
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  get_downloads:
    handler: download.downloads
    events:
      - http:
          path: organizations/{organization_id}/downloads
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true

  ### Single object functions
  # Organization
  get_organization:
    handler: organization.get_organization
    events:
      - http:
          path: organizations/{organization_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true

  # Transfer
  create_transfer:
    handler: transfer.create_transfer
    events:
      - http:
          path: organizations/{organization_id}/transfers
          method: post
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  get_transfer:
    handler: transfer.get_transfer
    events:
      - http:
          path: organizations/{organization_id}/transfers/{transfer_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                transfer_id: true
  # Connection
  get_connection:
    handler: connection.get_connection
    events:
      - http:
          path: organizations/{organization_id}/connections/{connection_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                connection_id: true

  # Mapping
  get_mapping:
    handler: mapping.get_mapping
    events:
      - http:
          path: organizations/{organization_id}/mappings/{mapping_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                mapping_id: true
    
  # User
  get_user:
    handler: user.get_user
    events:
      - http:
          path: organizations/{organization_id}/users/{user_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                user_id: true

  # History
  get_history:
    handler: history.get_history
    events:
      - http:
          path: organizations/{organization_id}/histories/{history_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                history_id: true
  # Download
  get_download:
    handler: download.get_download
    events:
      - http:
          path: organizations/{organization_id}/downloads/{download_id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                download_id: true
  get_download_link:
    handler: download.get_download_link
    events:
      - http:
          path: organizations/{organization_id}/downloads/{download_id}/link
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
                download_id: true
  # Upload
  create_upload:
    handler: upload.create_upload
    events:
      - http:
          path: organizations/{organization_id}/upload
          method: post
          cors: true
          request:
            parameters:
              paths:
                organization_id: true
  # Other
  frequencies_list:
    handler: transfer.get_frequencies_list
    events:
      - http:
          path: organizations/{organization_id}/lists/frequencies
          method: get
          cors: true
          request:
            parameters:
              paths:
                organization_id: true

plugins:
  - serverless-python-requirements
  - serverless-package-external

custom:
  pythonRequirements:
    dockerizePip: non-linux
  packageExternal:
    external:
      - '../models'
      - '../library'